# For more examples, including how to limit scans to only high-severity issues
# and fail PR checks, see https://github.com/snyk/actions/

name: Snyk Security

on:
  pull_request:
    branches: ['main']
  schedule:
    - cron: '12 8 * * 2'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  snyk:
    permissions:
      actions: read
      contents: read
      statuses: read
      security-events: write
    runs-on: ubuntu-latest
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: 'Set up Snyk CLI to check for security issues'
        uses: snyk/actions/setup@cdb760004ba9ea4d525f2e043745dfe85bb9077e

        # Runs Snyk Code (SAST) analysis and uploads results into GitHub.
      - name: 'Code (SAST) test'
        run: snyk code test --sarif > snyk-code.sarif || true

        # Runs Snyk Infrastructure as Code (IaC) analysis and uploads result into GitHub.
      - name: 'Infrastructure as Code test and report'
        run: snyk iac test --report || true

        # Test node
      - name: 'Node test'
        uses: snyk/actions/node@master
        continue-on-error: true

        # Build the docker images for testing
      - name: 'Container monitor ~ build Docker image'
        run: docker image build -t cap-node:snyk .

        # Runs Snyk Container (Container and SCA) analysis.
      - name: 'Container monitor ~ analyse'
        run: snyk container monitor cap-node:snyk --file=Dockerfile

        # Validate SARIF file before uploading
      - name: 'Validate SARIF file'
        id: validate-sarif
        run: |
          if [ -f snyk-code.sarif ]; then
            if jq empty snyk-code.sarif 2>/dev/null; then
              echo "SARIF file is valid JSON"
              echo "valid=true" >> $GITHUB_OUTPUT
            else
              echo "SARIF file is not valid JSON, skipping upload"
              echo "Content of snyk-code.sarif:"
              cat snyk-code.sarif
              echo "valid=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "SARIF file not found, skipping upload"
            echo "valid=false" >> $GITHUB_OUTPUT
          fi

      # Push the Snyk Code results into GitHub Code Scanning tab
      - name: 'Upload result to GitHub Code Scanning'
        if: steps.validate-sarif.outputs.valid == 'true'
        uses: github/codeql-action/upload-sarif@70df9def86d22bf0ea4e7f8b956e7b92e7c1ea22
        with:
          sarif_file: snyk-code.sarif
