trigger:
  - main

variables:
  - name: awsRegion
    value: eu-west-2
  - name: ecrRepositoryName
    value: pfl-care-arrangement-plan
  - name: awsAccountId
    value: '536697271310'

stages:
  - stage: Validation
    jobs:
      - job: ValidationJob
        steps:
          - template: templates/validation.yml
  - stage: development
    displayName: Deploy to Test
    jobs:
      - job: DeployTest
        steps:
          - task: Docker@2
            displayName: Build an image
            inputs:
              command: build
              dockerfile: 'Dockerfile'
              buildContext: '.'
              repository: 'pfl-care-arrangement-plan'
              tags: $(Build.SourceVersion)
          - task: ECRPushImage@1
            displayName: 'Push Docker Image to ECR'
            inputs:
              awsCredentials: 'aws-oidc-federation'
              regionName: $(awsRegion)
              sourceImageName: 'pfl-care-arrangement-plan'
              sourceImageTag: $(Build.SourceVersion)
              repositoryName: $(ecrRepositoryName)
              pushTag: $(Build.SourceVersion)
          - task: AWSShellScript@1
            displayName: 'Run Terraform'
            inputs:
              awsCredentials: 'aws-oidc-federation'
              regionName: $(awsRegion)
              scriptType: inline
              inlineScript: |
                cd terraform/application
                terraform init -input=false
                terraform workspace new test || terraform workspace select test
                terraform apply -input=false -auto-approve \
                  -var "docker_image=$(awsAccountId).dkr.ecr.$(awsRegion).amazonaws.com/$(ecrRepositoryName):$(Build.SourceVersion)" \
                  -var "build_number=$(Build.BuildNumber)" \
                  -var "git_ref=$(Build.SourceVersion)" \
                  -var "git_branch=$(Build.SourceBranchName)" \
                  -var "session_secret=$(TestSessionSecret)"
  - stage: production
    displayName: Deploy to Production
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
    trigger: manual
    jobs:
      - job: DeployProd
        steps:
          - task: AWSShellScript@1
            displayName: 'Run Terraform'
            inputs:
              awsCredentials: 'aws-oidc-federation'
              regionName: $(awsRegion)
              scriptType: inline
              inlineScript: |
                cd terraform/application
                terraform init -input=false
                terraform workspace new prod || terraform workspace select prod
                terraform apply -input=false -auto-approve \
                  -var "docker_image=$(awsAccountId).dkr.ecr.$(awsRegion).amazonaws.com/$(ecrRepositoryName):$(Build.SourceVersion)" \
                  -var "build_number=$(Build.BuildNumber)" \
                  -var "git_ref=$(Build.SourceVersion)" \
                  -var "git_branch=$(Build.SourceBranchName)" \
                  -var "session_secret=$(ProdSessionSecret)"
